{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Problem Solving": {
		"prefix": "PS",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"",
			"typedef long long ll;",
			"typedef pair<int, int> pii;",
			"typedef pair<ll, ll> pll;",
			"typedef vector<int> vint;",
			"typedef vector<ll> vll;",
			"typedef vector<pii> vpii;",
			"typedef vector<pll> vpll;",
			"",
			"#define FASTIO ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);",
			"#define endl '\\n';",
			"#define debug(x) cout << \"[Debug] \" << #x << \" is \" << x << endl;",
			"#define _debugV1(v) for (auto it = v.begin(); it != v.end(); ++it) { cout << *it; if (next(it) != v.end()) cout << \" | \"; }",
			"#define debugVec(v) do { \\",
			"    cout << \"[Debug] [ \"; \\",
			"    _debugV1(v); \\",
			"    cout << \" ]\" << endl; \\",
			"} while (0)",
			"#define debugV2(v) do { \\",
			"    cout << \"[Debug] [\" << endl; \\",
			"    for (auto v1: v) { \\",
			"        cout << \"  [ \"; \\",
			"        _debugV1(v1); \\",
			"        cout << \" ]\" << endl; \\",
			"    } \\",
			"    cout << \"]\" << endl; \\",
			"} while (0)",
			"#define pair_out(pair) { out << '{' << pair.first << \", \" << pair.second << '}'; }",
			"std::ostream& operator << (ostream& out, pii& pair) {",
			"    pair_out(pair);",
			"    return out;",
			"}",
			"std::ostream& operator << (ostream& out, pll& pair) {",
			"    pair_out(pair);",
			"    return out;",
			"}",
			"",
			"int main() {",
			"    FASTIO;",
			"    return 0;",
			"}"
		],
		"description": "Problem Solving"
	}	
}